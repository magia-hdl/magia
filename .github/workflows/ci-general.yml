name: General CI Build and Test

on: [push]

permissions:
  contents: read

jobs:
  RunTests:

    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4

    # Installation of Binary Dependencies
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
        cache-dependency-path: poetry.lock
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install Verilator
      run: |
        sudo apt install libjs-underscore libjs-jquery fonts-font-awesome fonts-lato
        wget -q http://mirrors.kernel.org/ubuntu/pool/main/s/sphinx/libjs-sphinxdoc_5.3.0-4_all.deb
        wget -q http://mirrors.kernel.org/ubuntu/pool/main/s/sphinx-rtd-theme/sphinx-rtd-theme-common_1.3.0+dfsg-1_all.deb
        wget -q http://mirrors.kernel.org/ubuntu/pool/universe/v/verilator/verilator_5.012-1_amd64.deb
        sudo dpkg -i sphinx-rtd-theme-common_1.3.0+dfsg-1_all.deb libjs-sphinxdoc_5.3.0-4_all.deb verilator_5.012-1_amd64.deb
        
        export CUR_PYTHON=$(poetry run which python)
        sudo ln -sf $CUR_PYTHON /usr/bin/python3

    # Verify version of installed binaries
    - name: List Poetry Environment
      run: |
        poetry env list
    - name: Print Poetry Environment
      run: |
        poetry env info
    - name: Print Verilator version
      run: |
        verilator --version
    - name: Python Version
      run: |
        python --version
    - name: Python with Poetry Version
      run: |
        poetry run python --version

    - name: Install dependencies
      run: |
        poetry install --no-interaction  --with=dev

    - name: Run Pytest
      env:
        pytest_github_report: true
      run: |
        poetry run pytest -n auto tests


  Deploy:

    runs-on: ubuntu-20.04
    needs:
      - RunTests
    if: ${{ startsWith(github.ref, 'refs/tags/v') && success() }}
    environment: release
    permissions:
      id-token: write

    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    # Installation of Binary Dependencies
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install Poetry
      uses: snok/install-poetry@v1

    # Verify version of installed binaries
    - name: List Poetry Environment
      run: |
        poetry env list
    - name: Print Poetry Environment
      run: |
        poetry env info
    - name: Python Version
      run: |
        python --version
    - name: Python with Poetry Version
      run: |
        poetry run python --version


    - name: Install dependencies
      run: |
        poetry install --no-interaction  --with=dev

    - name: Build Package
      run: |
        poetry build

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
